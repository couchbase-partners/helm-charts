# Default values for couchbase-operator chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Select what to install
install:
  # -- Install the couchbase operator
  couchbaseOperator: true
  # -- Install the admission controller
  admissionController: true
  # -- Install sync gateway
  syncGateway: false

# couchbaseOperator is the controller for couchbase cluster
couchbaseOperator:
  # -- Name of the couchbase operator Deployment
  name: "couchbase-operator"
  # -- Image specifies repository and tag of the Couchbase Operator container.
  image:
    repository: couchbase/operator
    tag: 2.8.0
  # -- The policy for pulling images from the repository onto hosts.
  # The imagePullPolicy value defaults to IfNotPresent, which means
  # that images are only pulled if they’re not present on the Kubernetes node.
  # Values allowed are Always, IfNotPresent, and Never.
  imagePullPolicy: IfNotPresent
  # -- ImagePullSecrets is an optional list of references to secrets to use for pulling images.
  imagePullSecrets: []
  # -- Set of command-line flags to pass on to the Operator to modify its behavior.
  # see: https://docs.couchbase.com/operator/2.0/reference-operator-configuration.html#command-line-arguments
  commandArgs:
    # -- Pod creation timeout. The Operator allows the timeout of pod creation to be manually configured.
    # It is primarily intended for use on cloud platforms where the deployment of multiple volumes and
    # pulling of a Couchbase Server container image may take a longer time than the default timeout period.
    pod-create-timeout: 10m
  # -- Resource Limits and requests for Pod CPU and Memory
  resources: {}
  # -- Specify a node selection constraint for couchbase-admission-operator pod assignment.
  # -- Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- Tolerations are applied to pods, and allow (but do not require)
  # the pods to schedule onto nodes with matching taints.
  tolerations: []
  # -- RBAC Scope of the Operator. Must be either 'Role' or 'ClusterRole'
  scope: Role

# admissionController is the controller for couchbase admission controller
# name is derived from chart
admissionController:
  name: "couchbase-admission-controller"
  # -- Image specifies repository and tag of the Couchbase Admission container.
  image:
    repository: couchbase/admission-controller
    tag: 2.8.0
  # -- The policy for pulling images from the repository onto hosts.
  # The imagePullPolicy value defaults to IfNotPresent, which means
  # that images are only pulled if they’re not present on the Kubernetes node.
  # Values allowed are Always, IfNotPresent, and Never.
  imagePullPolicy: IfNotPresent
  # -- ImagePullSecrets is an optional list of references to secrets to use for pulling images
  imagePullSecrets: []
  # -- Set of command-line flags to pass on to the Admission Controller to modify its behavior.
  # Do not change.
  commandArgs:
    validate-secrets: true
    validate-storage-classes: true
    default-file-system-group: true
  # -- Resource Limits and requests for Pod CPU and Memory
  resources: {}
  # -- Specify a node selection constraint for couchbase-admission-controller pod assignment.
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- Tolerations are applied to pods, and allow (but do not require)
  # the pods to schedule onto nodes with matching taints.
  tolerations: []
  # -- Determines whether the admission controller should log all of its validation notices within the console.
  # When set to false, only validation errors are logged within the pod’s console.
  verboseLogging: false
  # -- Specify whether to run as a non-root user. Running as non-root ensures least privilege.
  runAsNonRoot: true
  # -- Disable the creation of Validation webhook. Setting to 'false' may be helpful when
  # installing into a restricted environments (ie Strict mTLS), since disabling
  # avoids performing resource fetching and validation from the Kubernetes API server.
  disableValidatingWebhook: false
  # -- RBAC Scope of the Admission Controller. Must be either 'Role' or 'ClusterRole'.
  # When scope is 'ClusterRole' the admission controller is able to validate resources
  # in all namespaces.  'Role' scope limits validation to a single a namespace.
  scope: ClusterRole

# admissionService exposes validation to cluster. This service
# is over https and certs are auto-generated based on `admissionService.name`.
admissionService:
  # -- Name of the service (auto-generated)
  name:
  # -- Port service exposes
  port: 443
  targetPort: 8443

# admissionCA can be used to override the Certs that will be used
# to sign the keys used by the admission operator.
admissionCA:
  # -- A base64 encoded PEM format certificate
  cert:
  # -- A base64 encoded PEM format private key
  key:
  # -- Expiry time of CA in days for generated certs
  expiration: 3650

# secret with client certs mounted within the admission controller.
admissionSecret:
  # -- Name of the secret (auto-generated)
  name:
  # -- PEM format certificate (auto-generated)
  # override via --set-file
  cert:
  # -- PEM format certificate (auto-generated)
  # override via --set-file
  key:

# syncGateway configuration
syncGateway:
  # -- Kind of resource to use when installing sync gateway resource.
  # suppports (Deployment | Statefulset)
  kind: Deployment
  # -- Name of the sync gateway pod.
  # defaults to name of chart
  name:
  # -- How many sync gateway pods to create
  # horizontally scale the deployment
  replicas: 1
  # -- Optional set to change cleanup policy
  revisionHistoryLimit:
  # -- Labels to apply to the deployment resource
  labels: {}
  # -- Labels to apply to the pods
  podLabels: {}
  # -- Resources to apply to the pods
  resources: {}
  # -- Affinity to apply to the pods
  affinity: {}
  # -- Which nodes to run the pods on
  nodeSelector: {}
  # -- Tolerations are applied to pods, and allow (but do not require)
  # the pods to schedule onto nodes with matching taints.
  tolerations: []
  admin:
    # -- Defines if the admin API will be exposed by sync gateway
    enabled: false
  service:
    # -- Additional annotations to add to the Sync Gateway service.
    # Useful for setting cloud provider specific annotations controlling the services deployed.
    annotations: {}
    # -- Optionally configure traffic policy for LoadBalancer and NodePort
    externalTrafficPolicy:
  # defines integration with third party monitoring software
  monitoring:
    prometheus:
      # -- Defines whether Prometheus metric collection is enabled
      enabled: false
      # -- Image used by the Sync Gateway to perform metric collection
      # (injected as a "sidecar" in each Sync Gateway Pod)
      image:
        repository: couchbasesamples/sync-gateway-prometheus-exporter
        tag: latest
      # pod
      resources: {}
        # requests:
        #   cpu: 100m
        # limits:
        #   cpu: 100m
  # -- Database config
  config:
    logging:
      console:
        enabled: true
        log_level: "debug"
        log_keys:
          - "*"
    # -- Databases is a list containing
    # bucket replication configs
    databases:
      db:
        # -- Bucket replicated to sync gateway
        bucket: default
        # -- Guest user config
        users:
          GUEST:
            # -- Disable creation of guest user
            disabled: false
            # -- Channels guest user may access.
            # defaults to all channels
            admin_channels: ["*"]
        # -- Server to connect db to, defaults to cluster server
        server:
        # -- Username of db admin, defaults to cluster admin username
        username:
        # -- Password of db admin, defaults to cluster admin password
        password:
        allow_conflicts: false
        revs_limit: 20
        enable_shared_bucket_access: true
        # -- Optional ca.cert for tls connection
        # (auto-generated when tls.generate true)
        cacert:
  # -- Type of service to use for exposing Sync Gateway
  # Set as empty string to prevent service creation
  exposeServiceType: ClusterIP
  # -- Image of the sync gateway container
  image:
    repository: couchbase/sync-gateway
    tag: 3.2.2-enterprise
  imagePullPolicy: IfNotPresent
  # -- Optional secret to use with prepoulated database config
  configSecret:
  # -- Location within sync gateway to back with persistent volume
  volumeMounts:
  - name: data
    mountPath: /dbs
    readOnly: true
  # -- Volume claim template to define size of persistent volumes
  # to provide for stateful sets
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        storageClassName: default
        resources:
          requests:
            storage: 1Gi