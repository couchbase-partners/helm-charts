{{- if .Values.cluster.security.rbac.managed }}
{{- if .Values.users }}
---
{{- $rootScope := . -}}
{{- $clusterName := (include "couchbase-cluster.clustername" .) -}}
apiVersion: v1
kind: List
items:
{{- range $user, $spec := .Values.users }}
{{- if typeIs "map[string]interface {}" $spec }}

{{- $userName := (printf "%s-%s" $user $clusterName) }}
{{- /* Only create Group and Rolebinding when autobind is enabled */ -}} 
{{- if $spec.autobind }}

- apiVersion: couchbase.com/v2
  kind: CouchbaseGroup
  metadata:
    name: {{ $userName }}
    labels:
      cluster: {{ $clusterName }}
  spec:
    roles:
{{- range $role := $spec.roles }}
{{ include "couchbase-cluster.rbac.apply-default" $role | indent 4 }}
{{- end }}
- apiVersion: couchbase.com/v2
  kind: CouchbaseRoleBinding
  metadata:
    name: {{ $userName }}
  spec:
    subjects:
    - kind: CouchbaseUser
      name: {{ $user }}
    roleRef:
      kind: CouchbaseGroup
      name: {{ $userName }}
{{- end }}

{{- /* Create user secret if name of secret to use is not provided */ -}}
{{- if not $spec.authSecret }}
- apiVersion: v1
  kind: Secret
  type: Opaque
  metadata:
    name: {{ $userName }}
  data:
    password: {{ $spec.password | b64enc | quote }}
{{- end }}
- apiVersion: couchbase.com/v2
  kind: CouchbaseUser
  metadata:
    name: {{ $user }}
    labels:
      cluster: {{ $clusterName }}
  spec:
    authDomain: {{ $spec.authDomain }}
    authSecret: {{ default $userName $spec.authSecret }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
